{"version":3,"file":"shared-ui-Text-Text-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAIA;AAFA;AAGA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://advanced-frontend/./src/shared/lib/classNames/ClassNames.ts","webpack://advanced-frontend/./src/shared/ui/Text/Text.tsx","webpack://advanced-frontend/./src/shared/ui/Text/Text.module.scss","webpack://advanced-frontend/./src/shared/ui/Text/Text.module.scss?b10e"],"sourcesContent":["type Mods = Record<string, boolean | string>;\n\nexport function classNames(\n  cls: string,\n  mods: Mods = {},\n  additional: string[] = []\n): string {\n  return [\n    cls,\n    ...additional.filter(Boolean),\n    ...Object.entries(mods)\n      .filter(([className, value]) => Boolean(value))\n      .map(([className]) => className),\n  ].join(\" \");\n}\n","import { classNames } from \"shared/lib/classNames/ClassNames\";\nimport cls from \"./Text.module.scss\";\n\nexport enum TextTheme {\n  PRIMARY = \"primary\",\n  ERROR = \"error\",\n}\n\ninterface TextProps {\n  className?: string;\n  title?: string;\n  text?: string;\n  theme?: TextTheme;\n}\n\nexport const Text = (props: TextProps) => {\n  const { className, text, title, theme = TextTheme.PRIMARY } = props;\n\n  return (\n    <div className={classNames(cls.Text, { [cls[theme]]: true }, [className])}>\n      {title && <p className={cls.title}>{title}</p>}\n      {text && <p className={cls.text}>{text}</p>}\n    </div>\n  );\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.src-shared-ui-Text-Text-module__title--ikI7V {\n  font: var(--font-l);\n  color: var(--primary-color);\n}\n\n.src-shared-ui-Text-Text-module__text--uNJee {\n  font: var(--font-m);\n  color: var(--secondary-color);\n}\n\n.src-shared-ui-Text-Text-module__error--F9oLX .src-shared-ui-Text-Text-module__title--ikI7V {\n  color: var(--red-light);\n}\n.src-shared-ui-Text-Text-module__error--F9oLX .src-shared-ui-Text-Text-module__text--uNJee {\n  color: var(--red-dark);\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/shared/ui/Text/Text.module.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,mBAAA;EACA,2BAAA;AACF;;AAEA;EACE,mBAAA;EACA,6BAAA;AACF;;AAGE;EACE,uBAAA;AAAJ;AAGE;EACE,sBAAA;AADJ\",\"sourcesContent\":[\".title {\\n  font: var(--font-l);\\n  color: var(--primary-color);\\n}\\n\\n.text {\\n  font: var(--font-m);\\n  color: var(--secondary-color);\\n}\\n\\n.error {\\n  .title {\\n    color: var(--red-light);\\n  }\\n\\n  .text {\\n    color: var(--red-dark);\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": `src-shared-ui-Text-Text-module__title--ikI7V`,\n\t\"text\": `src-shared-ui-Text-Text-module__text--uNJee`,\n\t\"error\": `src-shared-ui-Text-Text-module__error--F9oLX`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./Text.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./Text.module.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./Text.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}