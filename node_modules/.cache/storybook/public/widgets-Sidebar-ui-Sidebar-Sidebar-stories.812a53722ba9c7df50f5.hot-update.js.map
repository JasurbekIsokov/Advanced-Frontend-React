{"version":3,"file":"widgets-Sidebar-ui-Sidebar-Sidebar-stories.812a53722ba9c7df50f5.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AAIA;AAFA;AAGA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AA5BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://advanced-frontend/./src/shared/lib/classNames/ClassNames.ts","webpack://advanced-frontend/./src/shared/ui/Button/Button.tsx","webpack://advanced-frontend/./src/shared/ui/Button/Button.module.scss"],"sourcesContent":["type Mods = Record<string, boolean | string>;\n\nexport function classNames(\n  cls: string,\n  mods: Mods = {},\n  additional: string[] = []\n): string {\n  return [\n    cls,\n    ...additional.filter(Boolean),\n    ...Object.entries(mods)\n      .filter(([className, value]) => Boolean(value))\n      .map(([className]) => className),\n  ].join(\" \");\n}\n","import { ButtonHTMLAttributes, FC } from \"react\";\nimport cls from \"./Button.module.scss\";\nimport { classNames } from \"shared/lib/classNames/ClassNames\";\n\nexport enum ButtonTheme {\n  CLEAR = \"clear\",\n  CLEAR_INVERTED = \"clearInverted\",\n  OUTLINE = \"outline\",\n  BACKGROUND = \"background\",\n  BACKGROUND_INVERTED = \"backgroundInverted\",\n}\n\nexport enum ButtonSize {\n  M = \"size_m\",\n  L = \"size_l\",\n  XL = \"size_xl\",\n}\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  className?: string;\n  theme?: ButtonTheme;\n  square?: boolean;\n  size?: ButtonSize;\n  disabled?: boolean;\n}\n\nexport const Button: FC<ButtonProps> = (props) => {\n  const {\n    className,\n    children,\n    theme,\n    square,\n    disabled,\n    size = ButtonSize.M,\n    ...otherProps\n  } = props;\n\n  const mods: Record<string, boolean> = {\n    [cls[theme]]: true,\n    [cls.square]: square,\n    [cls[size]]: true,\n    [cls.disabled]: disabled,\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(cls.Button, mods, [className])}\n      disabled={disabled}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./Button.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./Button.module.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./Button.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}