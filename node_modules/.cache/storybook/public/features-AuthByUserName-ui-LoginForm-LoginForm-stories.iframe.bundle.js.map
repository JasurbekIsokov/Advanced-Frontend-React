{"version":3,"file":"features-AuthByUserName-ui-LoginForm-LoginForm-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClBA;AACA;;;;;;;;;;;;;;;;;;ACAA;AACA;AAAA;AAUA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA","sources":["webpack://advanced-frontend/./src/app/providers/StoreProvider/config/store.ts","webpack://advanced-frontend/./src/app/providers/StoreProvider/index.ts","webpack://advanced-frontend/./src/app/providers/StoreProvider/ui/StoreProvider.tsx","webpack://advanced-frontend/./src/shared/config/storybook/StoreDecorator/StoreDecorator.tsx"],"sourcesContent":["import { ReducersMapObject, configureStore } from \"@reduxjs/toolkit\";\nimport { counterReducer } from \"entities/counter/model/slice/CounterSlice\";\nimport { loginReducer } from \"features/AuthByUserName/model/slice/loginSlice\";\nimport { StateSchema } from \"./StateSchema\";\nimport { userReducer } from \"entities/user\";\n\nexport function createReduxStore(initialState?: StateSchema) {\n  const rootReducers: ReducersMapObject<StateSchema> = {\n    counter: counterReducer,\n    user: userReducer,\n    loginForm: loginReducer,\n  };\n\n  return configureStore<StateSchema>({\n    reducer: rootReducers,\n    devTools: __IS_DEV__,\n    preloadedState: initialState,\n  });\n}\n","import { StoreProvider } from \"./ui/StoreProvider\";\nimport { createReduxStore } from \"./config/store\";\nimport type { StateSchema } from \"./config/StateSchema\";\n\nexport { StoreProvider, createReduxStore, StateSchema };\n","import { ReactNode } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createReduxStore } from \"app/providers/StoreProvider/config/store\";\n\nimport { DeepPartial } from \"@reduxjs/toolkit\";\nimport { StateSchema } from \"../config/StateSchema\";\n\ninterface StoreProviderProps {\n  children?: ReactNode;\n  initialState?: DeepPartial<StateSchema>;\n}\n\nexport const StoreProvider = (props: StoreProviderProps) => {\n  const { children, initialState } = props;\n\n  const store = createReduxStore(initialState as StateSchema);\n\n  return <Provider store={store}>{children}</Provider>;\n};\n","import { Story } from \"@storybook/react\";\nimport { StateSchema, StoreProvider } from \"app/providers/StoreProvider\";\nimport { DeepPartial } from \"@reduxjs/toolkit\";\n\nexport const StoreDecorator =\n  (state: DeepPartial<StateSchema>) => (StoryComponent: Story) =>\n    (\n      <StoreProvider initialState={state}>\n        <StoryComponent />\n      </StoreProvider>\n    );\n"],"names":[],"sourceRoot":""}