{"version":3,"file":"src_shared_ui_Button_Button_tsx.39ba5a297e607dc3483b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AA5BA","sources":["webpack://advanced-frontend/./src/shared/ui/Button/Button.tsx"],"sourcesContent":["import { classNames } from \"shared/lib/classNames/classNames\";\nimport { ButtonHTMLAttributes, FC } from \"react\";\nimport cls from \"./Button.module.scss\";\n\nexport enum ButtonTheme {\n  CLEAR = \"clear\",\n  CLEAR_INVERTED = \"clearInverted\",\n  OUTLINE = \"outline\",\n  BACKGROUND = \"background\",\n  BACKGROUND_INVERTED = \"backgroundInverted\",\n}\n\nexport enum ButtonSize {\n  M = \"size_m\",\n  L = \"size_l\",\n  XL = \"size_xl\",\n}\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  className?: string;\n  theme?: ButtonTheme;\n  square?: boolean;\n  size?: ButtonSize;\n  disabled?: boolean;\n}\n\nexport const Button: FC<ButtonProps> = (props) => {\n  const {\n    className,\n    children,\n    theme,\n    square,\n    disabled,\n    size = ButtonSize.M,\n    ...otherProps\n  } = props;\n\n  const mods: Record<string, boolean> = {\n    [cls[theme]]: true,\n    [cls.square]: square,\n    [cls[size]]: true,\n    [cls.disabled]: disabled,\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(cls.Button, mods, [className])}\n      disabled={disabled}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n"],"names":[],"sourceRoot":""}